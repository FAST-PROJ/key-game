from sklearn.neural_network import MLPClassifier
import csv

class IA():

    def __init__(self):
        self.csvTrain = self.readCSV()
        self.clf = MLPClassifier(activation='logistic',
                                 alpha=1e-05,
                                 batch_size='auto',
                                 beta_1=0.9,
                                 beta_2=0.999,
                                 early_stopping=False,
                                 epsilon=1e-08,
                                 hidden_layer_sizes=(5, 5),
                                 learning_rate='constant',
                                 learning_rate_init=0.001,
                                 max_iter=1000000,
                                 momentum=0.9,
                                 n_iter_no_change=1000,
                                 nesterovs_momentum=True,
                                 power_t=0.5,
                                 random_state=1,
                                 shuffle=True,
                                 solver='adam',
                                 tol=0.0000000000001,
                                 validation_fraction=0.7,
                                 verbose=True,
                                 warm_start=True)

        self.trainInputs = self.readTrainInputs()
        self.outputsTrain = self.readTrainOutputs()

        # train
        self.clf.fit(self.trainInputs, self.outputsTrain)

    def readTrainInputs(self):
        line_count = 0
        for row in self.csvTrain:
            if line_count == 0:
                print(f'Column names are {", ".join(row)}')
                line_count += 1
            print(
                f'\t{row["name"]} works in the {row["department"]} department, and was born in {row["birthday month"]}.')
            line_count += 1
        print(f'Processed {line_count} lines.')

    def readTrainOutputs(self):
        line_count = 0
        for row in self.csvTrain:
            if line_count == 0:
                print(f'Column names are {", ".join(row)}')
                line_count += 1
            print(
                f'\t{row["name"]} works in the {row["department"]} department, and was born in {row["birthday month"]}.')
            line_count += 1
        print(f'Processed {line_count} lines.')

    def readCSV(self):
        with open('train.txt', mode='r') as csv_file:
            csv_reader = csv.DictReader(csv_file)

        return csv_reader

    def predictMovement(self, input):
        
        return self.clf.predict(input)

