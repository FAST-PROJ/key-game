
from sklearn.neural_network import MLPClassifier

class IA():

    def __init__(self):

    def trainIA(self):



        clf = MLPClassifier(activation='logistic',
                            alpha=1e-05,
                            batch_size='auto',
                            beta_1=0.9,
                            beta_2=0.999,
                            early_stopping=False,
                            epsilon=1e-08,
                            hidden_layer_sizes=(28, 8),
                            learning_rate='constant',
                            learning_rate_init=0.001,
                            max_iter=1000000,
                            momentum=0.9,
                            n_iter_no_change=1000,
                            nesterovs_momentum=True,
                            power_t=0.5,
                            random_state=1,
                            shuffle=True,
                            solver='adam',
                            tol=0.0000000000001,
                            validation_fraction=0.7,
                            verbose=True,
                            warm_start=True)
        # train
        clf.fit(X, Y)

    def predictMovement(self):

        clf = MLPClassifier(activation='logistic',
                            alpha=1e-05,
                            batch_size='auto',
                            beta_1=0.9,
                            beta_2=0.999,
                            early_stopping=False,
                            epsilon=1e-08,
                            hidden_layer_sizes=(28, 8),
                            learning_rate='constant',
                            learning_rate_init=0.001,
                            max_iter=1000000,
                            momentum=0.9,
                            n_iter_no_change=1000,
                            nesterovs_momentum=True,
                            power_t=0.5,
                            random_state=1,
                            shuffle=True,
                            solver='adam',
                            tol=0.0000000000001,
                            validation_fraction=0.7,
                            verbose=True,
                            warm_start=True)
        # train
        clf.fit(X, Y)

        clf.predict([[0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0]])


